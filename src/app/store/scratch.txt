
import { RouterStateSnapshot,RoutesRecognized } from '@angular/router';
import { ROUTER_NAVIGATION } from '@ngrx/router-store';
import { NavigationExtras } from '@angular/router';
import { Action } from '@ngrx/store';

/* tslint:disable */
export declare type RouterNavigationPayload<T> = {
  routerState: T;
  event: RoutesRecognized;
};
/* tslint:enable */

/* tslint:disable */
export declare type RouterNavigationAction<T = RouterStateSnapshot> = {
  type: typeof ROUTER_NAVIGATION;
  payload: RouterNavigationPayload<T>;
};
/* tslint:enable */

export const GO = '[Router] Go';
export const BACK = '[Router] Back';
export const FORWARD = '[Router] Forward';

export class Go implements Action {
  readonly type = GO;

  constructor(
    public payload: {
      path: any[];
      query?: object;
      extras?: NavigationExtras;
    }
  ) {}
}

export class Back implements Action {
  readonly type = BACK;
}

export class Forward implements Action {
  readonly type = FORWARD;
}

export type RouterActionsUnion = Go | Back | Forward;
